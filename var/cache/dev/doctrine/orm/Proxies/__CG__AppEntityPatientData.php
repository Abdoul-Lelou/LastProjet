<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PatientData extends \App\Entity\PatientData implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'symptome', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'poids', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'constat', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'date', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'heure', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'taille', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'patient', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'medecin', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'groupe', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'ordonnance'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'symptome', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'poids', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'constat', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'date', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'heure', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'taille', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'patient', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'medecin', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'groupe', '' . "\0" . 'App\\Entity\\PatientData' . "\0" . 'ordonnance'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PatientData $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSymptome(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSymptome', []);

        return parent::getSymptome();
    }

    /**
     * {@inheritDoc}
     */
    public function setSymptome(string $symptome): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSymptome', [$symptome]);

        return parent::setSymptome($symptome);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoids(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoids', []);

        return parent::getPoids();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoids(int $poids): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoids', [$poids]);

        return parent::setPoids($poids);
    }

    /**
     * {@inheritDoc}
     */
    public function getConstat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConstat', []);

        return parent::getConstat();
    }

    /**
     * {@inheritDoc}
     */
    public function setConstat(string $constat): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConstat', [$constat]);

        return parent::setConstat($constat);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(string $date): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeure(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeure', []);

        return parent::getHeure();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeure(string $heure): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeure', [$heure]);

        return parent::setHeure($heure);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaille(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaille', []);

        return parent::getTaille();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaille(float $taille): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaille', [$taille]);

        return parent::setTaille($taille);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatient(): ?\App\Entity\Patient
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatient', []);

        return parent::getPatient();
    }

    /**
     * {@inheritDoc}
     */
    public function setPatient(?\App\Entity\Patient $patient): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPatient', [$patient]);

        return parent::setPatient($patient);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedecin(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedecin', []);

        return parent::getMedecin();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedecin(?\App\Entity\User $medecin): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedecin', [$medecin]);

        return parent::setMedecin($medecin);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupe(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupe', []);

        return parent::getGroupe();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupe(string $groupe): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupe', [$groupe]);

        return parent::setGroupe($groupe);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrdonnance(): ?\App\Entity\Ordonnance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrdonnance', []);

        return parent::getOrdonnance();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrdonnance(\App\Entity\Ordonnance $ordonnance): \App\Entity\PatientData
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrdonnance', [$ordonnance]);

        return parent::setOrdonnance($ordonnance);
    }

}
